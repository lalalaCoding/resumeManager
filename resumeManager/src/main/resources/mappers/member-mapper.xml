<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.my.resumeManager.member.model.dao.MemberMapper">
	<!-- MEMBER 클래스가 상속받은 PROFILE_IMAGE 클래스의 필드까지 매핑될 수 있도록 resultMap을 작성한다. -->
	<resultMap type="com.my.resumeManager.member.model.vo.Member" id="memberMap">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="memberAddress" column="MEMBER_ADDRESS"/>
		<result property="memberPhone" column="MEMBER_PHONE"/>
		<result property="memberEmail" column="MEMBER_EMAIL"/>
		<result property="memberSocial" column="MEMBER_SOCIAL"/>
		<result property="memberToken" column="MEMBER_TOKEN"/>
		<result property="memberHistory" column="MEMBER_HISTORY"/>
		<result property="memberStatus" column="MEMBER_STATUS"/>
		<result property="memberType" column="MEMBER_TYPE"/>
		<result property="memberEnroll" column="MEMBER_ENROLL"/>
		<result property="memberUpdate" column="MEMBER_UPDATE"/>
		<result property="memberGender" column="MEMBER_GENDER"/>
		<result property="memberAge" column="MEMBER_AGE"/>
		<result property="profileOrigin" column="PROFILE_ORIGINAL"/>
		<result property="profileRename" column="PROFILE_RENAME"/>
		<result property="profilePath" column="PROFILE_PATH"/>
	</resultMap>

	<!-- 회원가입 : 아이디 중복 확인 -->
	<select id="checkId" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 회원가입 : MEMBER 테이블에 삽입 -->
	<insert id="enrollMember" useGeneratedKeys="true">
		<selectKey resultType="_int" keyProperty="memberNo" order="BEFORE">
			SELECT SEQ_MEMBER.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO MEMBER(MEMBER_NO, MEMBER_ID, MEMBER_PWD, MEMBER_NAME, MEMBER_ADDRESS, MEMBER_PHONE, MEMBER_EMAIL, MEMBER_SOCIAL, MEMBER_TOKEN,
							MEMBER_HISTORY, MEMBER_STATUS, MEMBER_TYPE, MEMBER_ENROLL, MEMBER_UPDATE, MEMBER_GENDER, MEMBER_AGE) 
		VALUES(${memberNo}, #{memberId}, #{memberPwd}, #{memberName}, #{memberAddress}, #{memberPhone}, 
				#{memberEmail}, #{memberSocial}, #{memberToken}, #{memberHistory}, DEFAULT, DEFAULT, SYSDATE, SYSDATE, #{memberGender}, ${memberAge})
	</insert>
	
	<!-- 회원가입 : PROFILE_IMAGE 테이블에 삽입 -->
	<insert id="enrollImage">
		INSERT INTO PROFILE_IMAGE VALUES(${memberNo}, #{profileOrigin}, #{profileRename}, #{profilePath})
	</insert>

	<!-- 로그인 : 아이디가 일치하는 회원조회 -->
	<select id="login" resultMap="memberMap">
		SELECT * FROM MEMBER left join PROFILE_IMAGE using(MEMBER_NO) WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 아이디 찾기 : 이름을 기준으로 이름과 전화번호, 회원번호 조회 -->
	<select id="checkNamePhone" resultType="Member">
		SELECT /*+ INDEX_ASC(MEMBER IDX_MEMBER_NAME)*/MEMBER_NAME, MEMBER_PHONE, MEMBER_NO
		FROM MEMBER
		WHERE MEMBER_NAME = #{memberName}
	</select>
	
	<!-- 회원 번호가 일치하는 회원 정보 조회 -->
	<!-- <select id="selectMemberNo" resultType="Member">
		SELECT * FROM MEMBER WHERE MEMBER_NO = ${memberNo} and member_status = 'Y'
	</select> -->
	
	<select id="selectMemberNo" resultType="Member">
		SELECT * FROM MEMBER join PROFILE_IMAGE using(MEMBER_NO) WHERE MEMBER_NO = ${memberNo} and member_status = 'Y'
	</select>
	
	
	
	
	
	<!-- 비밀번호 찾기 : 아이디를 기준으로 아이디와 전화번호, 회원번호 조회 -->
	<select id="checkIdPhone" resultType="Member">
		SELECT MEMBER_ID, MEMBER_PHONE, MEMBER_NO
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 비밀번호 수정 -->
	<update id="pwdModify">
		UPDATE MEMBER
		SET MEMBER_PWD = #{memberPwd}
		WHERE MEMBER_NO = ${memberNo}
	</update>
	
	
	
	
	
	
</mapper> 