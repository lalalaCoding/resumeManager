<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.my.resumeManager.chat.model.dao.ChatMapper">
	<!-- 서로 다른 두 회원이 참여중인 채팅 방 조회하기 -->
	<select id="myChatMember" resultType="ChatMember">
		select room_no
		from chat_member
		where room_no in (select chat_room.room_no
		                    from chat_member
		                            join chat_room on(chat_member.room_no = CHAT_ROOM.room_no)
		                    where ROOM_VISITER = ${visiterMap.senderNo} and ROOM_STATUS = 'Y')
		        and room_visiter = ${visiterMap.receiverNo}
	</select>
	
	<!-- 채팅방을 추가하고 추가된 채팅방 번호를 파라미터에 저장하기 -->
	<insert id="insertChatRoom" useGeneratedKeys="true">
		<selectKey keyProperty="roomNo" resultType="_int" order="BEFORE">
	        SELECT SEQ_ROOM.nextval FROM DUAL
	    </selectKey>
	    INSERT INTO chat_room VALUES (${roomNo}, 'Y')
	</insert>
	
	<!-- 채팅방에 참여 중인 회원 정보 추가하기 : 2개의 행을 추가한다. -->
	<insert id="insertChatMember">
		INSERT ALL
		<foreach collection="visiterMap" index="key" item="value" separator=" ">
			<if test="!key.equals('roomNo')">
				INTO CHAT_MEMBER VALUES(FN_JOIN, ${visiterMap.roomNo}, ${value})
			</if>
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<!-- 채팅방에 참여중인 CAHT_MEMBER 행을 조회 -->
	<select id="selectChatMemberList" resultType="ChatMember">
		SELECT *
		FROM CHAT_MEMBER
		WHERE 
		<if test="conditionMap.condition.equals('roomNo')">
			ROOM_NO = ${conditionMap.roomNo}
		</if>
		<if test="conditionMap.condition.equals('memberNo')">
			ROOM_NO in (select ROOM_NO
		                from CHAT_MEMBER
		                where room_visiter = ${conditionMap.memberNo})
		</if>
	</select>
	
	<!-- 채팅 메시지 조회하기 -->
	<select id="selectAllChatMessageList" resultType="ChatMessage">
		SELECT *
		FROM CHAT_MESSAGE
		WHERE JOIN_NO IN 
		<foreach collection="list" item="item" open="(" close=")" separator=", ">${item.joinNo}</foreach>
		ORDER BY MESSAGE_CREATE ASC
	</select>
	
	<!-- 최근 메시지 조회하기 -->
	<select id="selectChatMessageList" resultType="ChatMessage">
		SELECT *
		FROM (  SELECT *
		        FROM CHAT_MESSAGE
		                JOIN CHAT_MEMBER USING(JOIN_NO)
		        WHERE MESSAGE_STATUS = 'Y' AND ROOM_NO IN 
		        <foreach collection="myRoomNoSet" item="item" open="(" close=")" separator=", ">${item}</foreach>
		        ORDER BY MESSAGE_CREATE DESC)
		WHERE (MESSAGE_CREATE, ROOM_NO) = (SELECT MAX(MESSAGE_CREATE), ROOM_NO
		                        FROM CHAT_MESSAGE
		                                JOIN CHAT_MEMBER USING(JOIN_NO)
		                        WHERE MESSAGE_STATUS = 'Y' AND ROOM_NO IN (21)
		                        GROUP BY ROOM_NO)
	</select>
	
	
	
	
	
	<!-- 채팅 메시지 저장하기 -->
	<insert id="insertChatMessage">
		insert into chat_message
		values(seq_message.nextval, #{messageContent}, 0, default, 'Y', ${joinNo})
	</insert>
	
	
	
	
	
	
</mapper>